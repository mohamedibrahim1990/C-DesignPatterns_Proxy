#include <iostream>
#include <string>
struct Image{
    virtual void draw()=0;
};

struct Bitmap: Image{
    Bitmap(const std::string & filename) : filename{filename}{
        std::cout << "loading image from " << filename << std::endl; 
    }
    virtual ~Bitmap(){}
    void draw() override{
        std::cout << "Drawing image " << filename << std::endl;
     }

private:
    std::string filename;
};

struct LazyBitmap: Image{
    LazyBitmap(const std::string & filename): filename{filename}{}
    ~LazyBitmap(){delete bmp; }
    void draw() override {
        if(!bmp){
            bmp = new Bitmap(filename);
            bmp->draw();
        }
    }

private:
    Bitmap * bmp{ nullptr };
    std::string filename;
};

void draw_image(Image& img){
    std::cout << "About to draw the image " << std::endl;
    img.draw();
    std::cout << "Done drawing the image" << std::endl;
}


int main(){ 
   LazyBitmap img{ "pokemon.png" };
    draw_image(img); // image loaded here
    
    }
